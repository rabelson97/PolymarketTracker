[
  {
    "task_id": "I3.T1",
    "iteration_id": "I3",
    "iteration_goal": "Finalize reporting outputs, orchestrator workflow, configuration polish, and quality gates to deliver a production-ready batch tool.",
    "description": "Implement reporter module for JSON/CSV exports and console summaries; author JSON Schema for report payloads in `docs/schemas/fresh_wallet_report.schema.json`; add unit tests for reporter formatting and schema validation.",
    "agent_type_hint": "BackendAgent",
    "inputs": "Reporting requirements from Section 2, Task `I2.T2` analyzer outputs.",
    "target_files": [
      "src/polymarket_tracker/services/reporter.py",
      "docs/schemas/fresh_wallet_report.schema.json",
      "tests/test_reporter.py",
      "data/exports/README.md"
    ],
    "input_files": [
      "src/polymarket_tracker/services/wallet_analyzer.py",
      "docs/diagrams/wallet_evaluation_sequence.puml"
    ],
    "deliverables": "Reporter capable of emitting JSON/CSV to `data/exports`, schema defining report structure, tests ensuring outputs match schema and formatting expectations, and brief README for export usage.",
    "acceptance_criteria": "Reporter tests pass; JSON Schema validates using `jsonschema`; generated files adhere to configuration thresholds and include required fields (address, balance, margin, timestamps).",
    "dependencies": [
      "I2.T2"
    ],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I3.T2",
    "iteration_id": "I3",
    "iteration_goal": "Finalize reporting outputs, orchestrator workflow, configuration polish, and quality gates to deliver a production-ready batch tool.",
    "description": "Integrate Typer CLI orchestration wiring together fetcher, analyzer, storage, and reporter; provide CLI commands for `run-batch` with options for lookback and thresholds, and script entrypoint in `scripts/run_batch.py`.",
    "agent_type_hint": "BackendAgent",
    "inputs": "Tasks `I1.T3`, `I2.T1`, `I2.T3`, and `I3.T1` implementations.",
    "target_files": [
      "src/polymarket_tracker/cli.py",
      "scripts/run_batch.py",
      "README.md"
    ],
    "input_files": [
      "src/polymarket_tracker/cli.py",
      "src/polymarket_tracker/services/data_fetcher.py",
      "src/polymarket_tracker/storage/cache_gateway.py",
      "src/polymarket_tracker/services/reporter.py"
    ],
    "deliverables": "Functional CLI command and helper script, updated README usage instructions, integration of configuration defaults and logging.",
    "acceptance_criteria": "Running `python -m polymarket_tracker.cli run-batch --dry-run` executes end-to-end with mocked deps; README includes command usage and configuration instructions; lints/tests remain passing.",
    "dependencies": [
      "I3.T1",
      "I2.T1",
      "I2.T3",
      "I1.T3"
    ],
    "parallelizable": false,
    "done": false
  },
  {
    "task_id": "I3.T3",
    "iteration_id": "I3",
    "iteration_goal": "Finalize reporting outputs, orchestrator workflow, configuration polish, and quality gates to deliver a production-ready batch tool.",
    "description": "Establish quality gates: configure CI workflow (GitHub Actions) with linting, tests, and OpenAPI/JSON Schema validation; add integration test using recorded fixtures; finalize documentation updates (CHANGELOG, success metrics notes).",
    "agent_type_hint": "DevOpsAgent",
    "inputs": "Tasks `I3.T2` CLI orchestration, `I2` modules, Section 5 verification strategy.",
    "target_files": [
      ".github/workflows/ci.yml",
      "tests/integration/test_batch_run.py",
      "CHANGELOG.md",
      "README.md"
    ],
    "input_files": [
      "pyproject.toml",
      "README.md",
      "api/polymarket_client.yaml",
      "docs/schemas/fresh_wallet_report.schema.json"
    ],
    "deliverables": "CI pipeline definition covering lint/test/spec validation, integration test with fixtures, changelog capturing initial release, README verification section.",
    "acceptance_criteria": "CI workflow runs lint/test/validate commands; integration test passes using mocked HTTP responses; documentation reflects verification steps and success metrics.",
    "dependencies": [
      "I3.T2",
      "I3.T1"
    ],
    "parallelizable": false,
    "done": false
  }
]